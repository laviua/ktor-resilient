import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

buildscript {
    ext.kotlin_version = '1.8.0'
    ext.kotlinx_coroutines = '1.6.4'
    ext.ktor_version = '2.2.2'
    ext.resilience4j_version = '2.0.2'
    ext.jackson_version = '2.14.1'
    ext.java_version = 17

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}


configure(subprojects) {
    apply plugin: 'idea'
    apply plugin: 'kotlin'
    apply plugin: 'org.jetbrains.kotlin.jvm'

    idea {
        module {
            outputDir file('build/classes/main')
            testOutputDir file('build/classes/test')
        }
    }

    test {
        useJUnitPlatform()
        reports {
            junitXml.enabled = true
            html.enabled = true
        }

        // Always run tests, even when nothing changed.
        dependsOn 'cleanTest'

        // Show test results.
        testLogging {
            events "passed", "skipped", "failed"
        }
    }

    sourceCompatibility = "$java_version"

    repositories {
        mavenCentral()
        mavenLocal()
    }

    dependencies {

        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")
        implementation("org.jetbrains.kotlin:kotlin-reflect:$kotlin_version")
        implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines")

    }

    compileKotlin {
        kotlinOptions.jvmTarget = "$java_version"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "$java_version"
    }

    tasks.withType(KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "$java_version"
        }
    }
    task stage(dependsOn: ['build', 'clean'])
    build.mustRunAfter clean
}

version = '1.0.0'